#!/bin/sh
# Install the latest Minefield mac nightly build, but only
# if it's different from the currently installed version.
set -e

build_url="http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/"
install_dir="/Applications/Minefield.app"
# version_id will need to be updated fairly frequently
version_id="4.0b8pre"
file_base="firefox-$version_id.en-US.mac64"

# determine the currently installed minefield build id
current=0
test -d "$install_dir" && current=$(
    grep "BuildID=" $install_dir/Contents/MacOS/application.ini |
    sed "s/BuildID=//"
)

# most recent version build available from mozilla
latest=$(
    curl -s "$build_url/$file_base.txt" |
    sed "s/ .*$//"
)
if [ "$current" != "$latest" ]; then
    echo "==> Fetching Minefield build $latest" 1>&2

    # setup a temp dir to do some work
    tmpdir="/tmp/$(basename $0)-$latest"
    trap "cd / && rm -rf $tmpdir" EXIT
    mkdir -p "$tmpdir"
    cd "$tmpdir"

    # fetch it
    curl -# -O "$build_url/$file_base.dmg"

    printf "==> Mounting DMG ...\n" 1>&2
    # mount DMG and get the mount path
    volume=$(
        hdid $file_base.dmg |
        grep "Apple_HFS" |
        sed "s/.*\(\/Volumes.*\)/\1/"
    )

    # remove the previous backup
    backup_dir="$(dirname $install_dir)/.$(basename $install_dir)"
    rm -rf "$backup_dir"

    # backup the currently installed Minefield.app
    test -d "$install_dir" &&
    mv "$install_dir" "$backup_dir"

    printf "==> Putting new files in place ...\n" 1>&2
    # copy the new one into place
    cp -r "$volume/Minefield.app" "$install_dir"

    # unmount the DMG
    printf "==> Unmounting DMG ...\n" 1>&2
    hdiutil detach -quiet "$volume"

    echo "==> Minefield upgraded to build $latest (from $current)."
else
    echo "==> You already have build $latest." 1>&2
fi
